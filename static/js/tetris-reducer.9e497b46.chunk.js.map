{"version":3,"sources":["modules/tetris/reducers/grid.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","modules/tetris/libs/figures/Figure.js","modules/tetris/libs/figures/FigureI.js","modules/tetris/libs/figures/FigureJ.js","modules/tetris/libs/figures/FigureL.js","modules/tetris/libs/figures/FigureO.js","modules/tetris/libs/figures/FigureS.js","modules/tetris/libs/figures/FigureT.js","modules/tetris/libs/figures/FigureZ.js","modules/tetris/libs/figures/getRandomFigure.js","modules/tetris/reducers/figure.js","modules/tetris/reducers/index.js"],"names":["config","grid","cols","rows","handleActions","action","stopGame","createGrid","startGame","collideFigure","state","figureCells","payload","currentFigure","getCells","map","tr","cell","find","c","haveSameCoordinates","selectCompletedRow","rowIndex","first","slice","rest","createIndeterminateRow","removeCompletedRow","r","moveCelldown","createClearRow","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","value","writable","configurable","id","_classPrivateFieldKey","name","Figure","head","consCell","direction","this","FigureI","alignment","getSize","rotate","x","y","getCoordinates","headX","headY","move","down","startHead","result","push","height","width","right","FigureJ","left","up","FigureL","FigureO","FigureS","FigureT","FigureZ","consFigure","dir","sample","keys","getRandomDirection","figures","figureInit","current","next","setCurrentFigure","getRandomFigure","setNextFigure","moveFigureDown","moveDown","moveFigureLeft","moveLeft","moveFigureRight","moveRight","rotateFigure","fallFigureDown","speed","min","max","init","score","collision","completedRow","gameState","finishGame","pauseGame","resumeGame","increaseGameSpeed","decreaseGameSpeed","modificator","combineReducers","figure"],"mappings":"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","file":"static/js/tetris-reducer.9e497b46.chunk.js","sourcesContent":["import { handleActions } from 'redux-actions';\nimport * as action from 'modules/main/actions';\nimport { createGrid, createClearRow, createIndeterminateRow } from 'libs/createGrid';\nimport { haveSameCoordinates, moveDown as moveCelldown } from 'libs/cell';\nimport config from '../constants/config';\n\nconst { grid: { cols, rows } } = config;\n\nexport default handleActions({\n  [action.tetris.stopGame]: () => createGrid(cols, rows),\n  [action.tetris.startGame]: () => createGrid(cols, rows),\n  [action.tetris.collideFigure]: (state, { payload: { currentFigure } }) => {\n    const figureCells = currentFigure.getCells();\n    return state.map(tr => tr.map((cell) => {\n      const commonCell = figureCells.find(c => haveSameCoordinates(c, cell));\n      return commonCell || cell;\n    }));\n  },\n  [action.tetris.selectCompletedRow]: (state, { payload: { rowIndex } }) => {\n    const first = state.slice(0, rowIndex);\n    const rest = state.slice(rowIndex + 1);\n    return [...first, createIndeterminateRow(cols, rowIndex), ...rest];\n  },\n  [action.tetris.removeCompletedRow]: (state, { payload: { rowIndex } }) => {\n    const first = state\n      .slice(0, rowIndex)\n      .map(r => r.map(moveCelldown));\n    const rest = state.slice(rowIndex + 1);\n    return [createClearRow(cols, 0), ...first, ...rest];\n  },\n}, createGrid(cols, rows));\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","import { cons as consCell } from 'libs/cell';\n\nexport default class Figure {\n  constructor(head = consCell([0, 0]), direction = 'down') {\n    this.head = head;\n    this.direction = direction;\n  }\n\n  getCells() {\n    return [];\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureI extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureI(head, 'right'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        for (let y = headY; y < headY + 4; y += 1) {\n          result.push(consCell([headX, y], { state: 'filled' }));\n        }\n        return result;\n      },\n      getSize: () => ({ height: 4, width: 1 }),\n    },\n    right: {\n      direction: 'right',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureI(head, 'down'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        for (let x = headX - 2; x < headX + 2; x += 1) {\n          result.push(consCell([x, headY], { state: 'filled' }));\n        }\n        return result;\n      },\n      getSize: () => ({ height: 1, width: 4 }),\n    },\n  }\n\n  #type = 'I';\n\n  getSize() {\n    return FigureI.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureI.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return FigureI.alignment[this.direction].rotate(this.head);\n  }\n\n  setPosition(x, y) {\n    return new FigureI(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureI(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureJ extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureJ(head, 'left'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    left: {\n      direction: 'left',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureJ(head, 'up'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 2], { state: 'filled' }));\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n    up: {\n      direction: 'up',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureJ(head, 'right'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX + 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    right: {\n      direction: 'right',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureJ(head, 'down'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 2], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 2], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n  };\n\n  #type = 'J';\n\n  getSize() {\n    return FigureJ.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureJ.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return FigureJ.alignment[this.direction].rotate(this.head);\n  }\n\n  setPosition(x, y) {\n    return new FigureJ(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureJ(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureL extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureL(head, 'left'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX + 1, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    left: {\n      direction: 'left',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureL(head, 'up'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 2], { state: 'filled' }));\n        result.push(consCell([headX, headY + 2], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n    up: {\n      direction: 'up',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureL(head, 'right'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    right: {\n      direction: 'right',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureL(head, 'down'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 2], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n  };\n\n  #type = 'L';\n\n  getSize() {\n    return FigureL.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureL.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return FigureL.alignment[this.direction].rotate(this.head);\n  }\n\n  setPosition(x, y) {\n    return new FigureL(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureL(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureO extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 2 }),\n    },\n  };\n\n  #type = 'O';\n\n  getSize() {\n    return FigureO.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureO.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return this;\n  }\n\n  setPosition(x, y) {\n    return new FigureO(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureO(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureS extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureS(head, 'left'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    left: {\n      direction: 'left',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureS(head, 'down'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 2], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n  };\n\n  #type = 'S';\n\n  getSize() {\n    return FigureS.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureS.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return FigureS.alignment[this.direction].rotate(this.head);\n  }\n\n  setPosition(x, y) {\n    return new FigureS(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureS(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureT extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureT(head, 'left'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    left: {\n      direction: 'left',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureT(head, 'up'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 2], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n    up: {\n      direction: 'up',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureT(head, 'right'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    right: {\n      direction: 'right',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureT(head, 'down'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 2], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n  };\n\n  #type = 'T';\n\n  getSize() {\n    return FigureT.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureT.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return FigureT.alignment[this.direction].rotate(this.head);\n  }\n\n  setPosition(x, y) {\n    return new FigureT(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureT(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { cons as consCell, getCoordinates } from 'libs/cell';\nimport Figure from './Figure';\n\nexport default class FigureZ extends Figure {\n  static alignment = {\n    down: {\n      direction: 'down',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureZ(head, 'left'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX + 1, headY + 1], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 2, width: 3 }),\n    },\n    left: {\n      direction: 'left',\n      startHead: consCell([5, 0], { state: 'filled' }),\n      rotate: head => new FigureZ(head, 'down'),\n      getCells: (head) => {\n        const result = [];\n        const [headX, headY] = getCoordinates(head);\n        result.push(consCell([headX, headY], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX, headY + 1], { state: 'filled' }));\n        result.push(consCell([headX - 1, headY + 2], { state: 'filled' }));\n        return result;\n      },\n      getSize: () => ({ height: 3, width: 2 }),\n    },\n  };\n\n  #type = 'Z';\n\n  getSize() {\n    return FigureZ.alignment[this.direction].getSize();\n  }\n\n  getCells() {\n    return FigureZ.alignment[this.direction].getCells(this.head);\n  }\n\n  rotate() {\n    return FigureZ.alignment[this.direction].rotate(this.head);\n  }\n\n  setPosition(x, y) {\n    return new FigureZ(consCell([x, y], { state: 'filled' }), this.direction);\n  }\n\n  move(x, y) {\n    const [headX, headY] = getCoordinates(this.head);\n    return new FigureZ(consCell([headX + x, headY + y], { state: 'filled' }), this.direction);\n  }\n\n  moveDown() {\n    return this.move(0, 1);\n  }\n\n  moveLeft() {\n    return this.move(-1, 0);\n  }\n\n  moveRight() {\n    return this.move(1, 0);\n  }\n}\n","import { keys, sample } from 'lodash';\nimport FigureI from './FigureI';\nimport FigureJ from './FigureJ';\nimport FigureL from './FigureL';\nimport FigureO from './FigureO';\nimport FigureS from './FigureS';\nimport FigureT from './FigureT';\nimport FigureZ from './FigureZ';\n\nconst getRandomDirection = Figure => sample(keys(Figure.alignment));\n\nconst consFigure = Figure => () => {\n  const dir = getRandomDirection(Figure);\n  return new Figure(Figure.alignment[dir].startHead, dir);\n};\n\nconst figures = [\n  consFigure(FigureI),\n  consFigure(FigureJ),\n  consFigure(FigureL),\n  consFigure(FigureO),\n  consFigure(FigureS),\n  consFigure(FigureT),\n  consFigure(FigureZ),\n];\n\nexport default () => sample(figures)();\n","import { handleActions } from 'redux-actions';\nimport * as action from 'modules/main/actions';\nimport getRandomFigure from '../libs/figures/getRandomFigure';\n\nconst figureInit = {\n  current: null,\n  next: null,\n};\n\nexport default handleActions({\n  [action.tetris.setCurrentFigure]: state => ({\n    ...state,\n    current: state.next || getRandomFigure(),\n  }),\n  [action.tetris.setNextFigure]: state => ({\n    ...state,\n    next: getRandomFigure(),\n  }),\n  [action.tetris.collideFigure]: state => ({\n    ...state,\n    current: null,\n  }),\n  [action.tetris.moveFigureDown]: state => ({\n    ...state,\n    current: state.current.moveDown(),\n  }),\n  [action.tetris.moveFigureLeft]: state => ({\n    ...state,\n    current: state.current.moveLeft(),\n  }),\n  [action.tetris.moveFigureRight]: state => ({\n    ...state,\n    current: state.current.moveRight(),\n  }),\n  [action.tetris.rotateFigure]: state => ({\n    ...state,\n    current: state.current.rotate(),\n  }),\n  [action.tetris.fallFigureDown]: state => ({\n    ...state,\n    current: state.current.moveDown(),\n  }),\n  [action.tetris.stopGame]: () => figureInit,\n}, figureInit);\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as action from 'modules/main/actions';\nimport config from '../constants/config';\nimport grid from './grid';\nimport figure from './figure';\n\nconst {\n  speed: { min, max, init },\n  score: { collision, completedRow }\n} = config;\n\nconst gameState = handleActions({\n  [action.tetris.startGame]: () => 'started',\n  [action.tetris.stopGame]: () => 'initial',\n  [action.tetris.finishGame]: () => 'finished',\n  [action.tetris.pauseGame]: () => 'paused',\n  [action.tetris.resumeGame]: () => 'started',\n}, 'initial');\n\nconst speed = handleActions({\n  [action.tetris.increaseGameSpeed]: state => (state === max ? state : state + 1),\n  [action.tetris.decreaseGameSpeed]: state => (state === min ? state : state - 1),\n}, init);\n\nconst score = handleActions({\n  // speed declared above so no destructuring here\n  [action.tetris.collideFigure]: (state, { payload }) => state + collision * payload.speed,\n  [action.tetris.removeCompletedRow]: (state, { payload: { modificator } }) => state + completedRow * modificator,\n  [action.tetris.startGame]: () => 0,\n  [action.tetris.stopGame]: () => 0,\n}, 0);\n\nexport default combineReducers({\n  gameState,\n  grid,\n  figure,\n  speed,\n  score,\n});\n"],"sourceRoot":""}