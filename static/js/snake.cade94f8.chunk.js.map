{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","modules/common/components/GameButton/index.jsx","modules/common/components/ArrowKeys/index.jsx","modules/common/components/KeyboardKey/index.jsx","modules/snake/containers/Grid.js","modules/snake/components/Grid.jsx","modules/snake/components/Stats.jsx","modules/snake/containers/Stats.js","modules/snake/components/Info.jsx","modules/snake/containers/Root.js","modules/snake/components/Root.jsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","_objectWithoutProperties","source","excluded","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","GameButton","children","className","btnProps","cn","ArrowKeys","aria-label","KeyboardKey","name","connect","state","grid","select","getGridCells","gameState","getGameState","actionCreators","map","tr","y","color","cellClass","Stats","actions","buttonByState","initial","title","action","startGame","started","stopGame","paused","finished","handleGameButton","useCallback","e","blur","onClick","defaultProps","Info","pauseGame","resumeGame","checkSnakeMove","game","useRef","current","useEffect","keydownListener","keyCode","document","addEventListener","removeEventListener","Header","canHome"],"mappings":"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","file":"static/js/snake.cade94f8.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './styles.css';\n\nexport default function GameButton({ children = null, className = '', ...btnProps }) {\n  return (\n    <button className={cn('game-button', className)} {...btnProps}>\n      {children}\n    </button>\n  );\n}\n\nGameButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport './styles.css';\n\nexport default function ArrowKeys() {\n  return (\n    <div className=\"arrow-keys\" aria-label=\"keyboard arrows\">\n      <kbd className=\"arrow-key arrow-key--top\" />\n      <div className=\"arrow-keys__bottom-layout\">\n        <kbd className=\"arrow-key arrow-key--left\" />\n        <kbd className=\"arrow-key arrow-key--down\" />\n        <kbd className=\"arrow-key arrow-key--right\" />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './styles.css';\n\nexport default function KeyboardKey({ className = '', name }) {\n  return <kbd className={cn('keyboard-key', className)}>[{name}]</kbd>\n}\n\nKeyboardKey.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n};\n","import { connect } from 'react-redux';\nimport * as actionCreators from 'modules/main/actions';\nimport * as select from 'modules/main/selectors';\nimport Grid from '../components/Grid';\n\nconst mapStateToProps = state => ({\n  grid: select.snake.getGridCells(state),\n  gameState: select.snake.getGameState(state),\n});\n\nexport default connect(mapStateToProps, actionCreators.snake)(Grid);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport cellStates from 'constants/possibleCellStates';\nimport './Grid.css';\n\nexport default function Grid({ grid = [], gameState = 'initial' }) {\n  return (\n    <div className=\"snake-grid-container\">\n      <table className=\"snake-grid\">\n        <tbody className=\"snake-grid__body\">\n          {grid.map((tr, i) => (\n            <tr className=\"snake-grid__row\" key={i}>\n              {tr.map(({ state, color }, y) => {\n                const cellClass = cn(\n                  'snake-grid__cell',\n                  `snake-grid__cell--${state}`,\n                  { [`snake-grid__cell--${color}`]: color },\n                );\n                return <td className={cellClass} key={y} />;\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {gameState === 'paused' && (\n        <div className=\"snake-grid-container__paused-overlay\" />\n      )}\n    </div>\n  );\n}\n\nGrid.propTypes = {\n  grid: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        state: PropTypes.oneOf(cellStates).isRequired,\n        color: PropTypes.string,\n      }),\n    ),\n  ).isRequired,\n  gameState: PropTypes.oneOf(['initial', 'started', 'paused', 'finished']).isRequired,\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n// import Settings from './Settings';\nimport GameButton from 'modules/common/components/GameButton';\nimport './Stats.css';\n\nexport default function Stats({\n  // score,\n  // speed,\n  gameState,\n  // canAdjustSpeed,\n  ...actions\n}) {\n  const buttonByState = {\n    initial: {\n      title: 'Start New Game',\n      action: actions.startGame,\n    },\n    started: {\n      title: 'Stop Game',\n      action: actions.stopGame,\n    },\n    paused: {\n      title: 'Stop Game',\n      action: actions.stopGame,\n    },\n    finished: {\n      title: 'Start New Game',\n      action: actions.startGame,\n    },\n  };\n\n  const getButtonTitle = () => buttonByState[gameState].title;\n\n  const handleGameButton = useCallback(\n    (e) => {\n      // blur focus to use [space] in game\n      e.target.blur();\n      buttonByState[gameState].action()\n    },\n    [gameState, buttonByState],\n  );\n\n  return (\n    <div className=\"snake-stats\">\n      <h2 className=\"snake-stats__title\">Game Stats</h2>\n\n      {/* TODO: add settings */}\n\n      {/* <Settings\n        speed={speed}\n        score={score}\n        incSpeed={actions.increaseGameSpeed}\n        decSpeed={actions.decreaseGameSpeed}\n        canAdjustSpeed={canAdjustSpeed}\n      /> */}\n\n      <GameButton onClick={handleGameButton}>\n        {getButtonTitle()}\n      </GameButton>\n    </div>\n  );\n};\n\nStats.propTypes = {\n  gameState: PropTypes.oneOf(['initial', 'started', 'paused', 'finished']).isRequired,\n  // speed: PropTypes.number.isRequired,\n  // score: PropTypes.number.isRequired,\n  // canAdjustSpeed: PropTypes.bool.isRequired,\n};\n\nStats.defaultProps = {\n  gameState: 'initial',\n  // speed: 1,\n  // score: 0,\n  // canAdjustSpeed: true,\n};\n","import { connect } from 'react-redux';\nimport * as actionCreators from 'modules/main/actions';\nimport * as select from 'modules/main/selectors';\nimport Stats from '../components/Stats';\n\nconst mapStateToProps = state => ({\n  gameState: select.snake.getGameState(state),\n  // speed: select.snake.getSpeed(state),\n  // score: select.snake.getScore(state),\n  // canAdjustSpeed: select.snake.canAdjustSpeed(state),\n});\n\nexport default connect(mapStateToProps, actionCreators.snake)(Stats);\n","import React from 'react';\nimport ArrowKeys from 'modules/common/components/ArrowKeys';\nimport KeyboardKey from 'modules/common/components/KeyboardKey';\nimport './Info.css';\n\nexport default function Info() {\n  return (\n    <div className=\"snake-info\">\n      <h2 className=\"snake-info__title\">Game info</h2>\n\n      <div className=\"snake-info__paragraph\">\n        <span className=\"snake-info__phrase\">Use</span>\n        <ArrowKeys />\n        <span className=\"snake-info__phrase\">to move</span>\n      </div>\n\n      <div className=\"snake-info__paragraph\">\n        <span className=\"snake-info__phrase\">Press</span>\n        <KeyboardKey name=\"Shift\" className=\"snake-info__info-key\" />\n        <span className=\"snake-info__phrase\">to pause/unpause game</span>\n      </div>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport * as actionCreators from 'modules/main/actions';\nimport * as select from 'modules/main/selectors';\nimport Root from '../components/Root';\n\nconst mapStateToProps = state => ({\n  gameState: select.snake.getGameState(state),\n});\n\nexport default connect(mapStateToProps, actionCreators.snake)(Root);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from 'modules/common/components/Header';\nimport Grid from '../containers/Grid';\nimport Stats from '../containers/Stats';\nimport Info from './Info';\nimport './Root.css';\n\nexport default function Root({\n  gameState = 'initial',\n  pauseGame,\n  resumeGame,\n  checkSnakeMove,\n}) {\n  // use \"refed\" game state for key listener\n  const game = useRef(gameState);\n  game.current = gameState;\n\n  useEffect(() => {\n    const keydownListener = (e) => {\n      if (gameState !== 'started' && gameState !== 'paused') {\n        return;\n      }\n      switch (e.keyCode) {\n        // shift\n        case 16: {\n          if (gameState === 'started') {\n            pauseGame();\n            break;\n          }\n          if (gameState === 'paused') {\n            resumeGame();\n          }\n          break;\n        }\n        // arrow left\n        case 37: {\n          if (gameState === 'started') {\n            checkSnakeMove('left');\n          }\n          break;\n        }\n        // arrow up\n        case 38: {\n          if (gameState === 'started') {\n            checkSnakeMove('up');\n          }\n          break;\n        }\n        // arrow right\n        case 39: {\n          if (gameState === 'started') {\n            checkSnakeMove('right');\n          }\n          break;\n        }\n        // arrow down\n        case 40: {\n          if (gameState === 'started') {\n            checkSnakeMove('down');\n          }\n          break;\n        }\n        default: break;\n      }\n    };\n\n    document.addEventListener('keydown', keydownListener);\n\n    return () => {\n      document.removeEventListener('keydown', keydownListener);\n    };\n  }, [gameState, pauseGame, resumeGame, checkSnakeMove]);\n\n  // pause game when unmounting\n  useEffect(() => () => {\n    if (game.current === 'started') {\n      pauseGame();\n    }\n  }, [pauseGame]);\n\n  return (\n    <div className=\"main-container\">\n      <Header title=\"Snake\" canHome />\n      <main className=\"snake-body\">\n        <Info />\n        <Grid />\n        <Stats />\n      </main>\n    </div>\n  );\n}\n\nRoot.propTypes = {\n  gameState: PropTypes.oneOf(['initial', 'started', 'paused', 'finished']).isRequired,\n};\n"],"sourceRoot":""}